
map $host $realm {
	192.168.1.65	xingrealm;
}


upstream keycloak_server {
    server 192.168.1.71:9080 max_fails=1 fail_timeout=10s;
}


upstream ics_server {
    server 192.168.1.71:8080 max_fails=1 fail_timeout=10s;
   
}

upstream tomcat_server {
		
    server 192.168.1.71:8080 max_fails=1 fail_timeout=10s;
    
}

server {
        listen  80;
        listen  [::]:80;
#        return  301 https://$host$request_uri;


################################################################################
        proxy_pass_request_headers      on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header HTTP_AUTHORIZATION $http_authorization;

		client_max_body_size 10K;


        location /auth {
        	proxy_set_header Host $host;
			proxy_pass http://keycloak_server;
			proxy_set_header X-Forwarded-For 172.25.120.23;
			proxy_set_header X-Forwarded-Proto https;
        }


       
		#keycloak configuration files
        location ~* ^/(tms-web|ics-tms-web)/keycloak/.*\.json$ {
            rewrite ^/(tms-web|ics-tms-web)/(.*)$  /$2 break;
            try_files $uri $uri/;
         }

   	location ~ ^/(tms-web|ics-tms-web)/realmheader$ {	
		add_header realm $realm;
            return 200;
        }
        
         location ~ ^/(tms-web|ics-tms-web) {
                if ($args = "") {
					rewrite ^(.*)$ $1?realm=$realm break;
                }
                if ($args !~ "realm=") {
					set $args $args&realm=$realm;
                }
				proxy_set_header Host $host;
				# rewrite ^(.*)$ $1?realm=$realm break;
                proxy_pass http://ics_server;
        }

		#redirect legacy api to new tms-api
        location ~ ^/tms/rest/targets/[^/]+/configurationfiles$ {
                if ($request_method = GET) {
                         rewrite ^/tms/(/?)(.*) /tms-api/$2 break;
                }
                 proxy_set_header realm $realm;
                 proxy_set_header Host $host;
                 proxy_pass http://tomcat_server;
        }
        
         location  /ics-api {
         	proxy_set_header realm $realm;
			proxy_pass http://ics_server;
        }





        location /tms {
        
        if ($request_method = 'OPTIONS') {
		        add_header 'Access-Control-Allow-Origin' '*' always;
		        #
		        # Om nom nom cookies
		        #
		        add_header 'Access-Control-Allow-Credentials' 'true' always;
		        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
		        #
		        # Custom headers and headers various browsers *should* be OK with but aren't
		        #
		        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,realm';
		        #
		        # Tell client that this pre-flight info is valid for 20 days
		        #
		        add_header 'Access-Control-Max-Age' 1728000;
		        add_header 'Content-Type' 'text/plain charset=UTF-8';
		        add_header 'Content-Length' 0;
		        return 204;
			}
			
	        add_header 'Access-Control-Allow-Credentials' 'true' always;
	        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
	        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,realm';
        
        
            proxy_set_header realm $realm;
        	proxy_set_header Host $host;
            proxy_pass http://tomcat_server;
        }
        
        location /ics {
			proxy_set_header realm $realm;
        	proxy_set_header Host $host;
            proxy_pass http://tomcat_server;
        }
#####################################################################################
# New APIs 
#####################################################################################
 # ics-job
                location ~ ^/rest/v1/(jobs/?|jobs/.*)$ {
                        rewrite /rest/v1/(.*)$ /ics-job/rest/$1 last;
                }

        #tms-api sites - every thing not ends with state, negative look behind
        location ~ ^/rest/v1/(sites/?|sites/.*)(?<!state)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }


        #tms-api stats
        location ^~ /rest/v1/stats/ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

        #tms-api targets and targets/{id}
        location ~ ^/rest/v1/(targets|targets/[^/]+)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

        #tms-api targets: configurationfiles
        location ~ ^/rest/v1/targets/[^/]+/(configurationfiles/?|configurationfiles/.+)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

       #files
        location ~ ^/rest/v1/(files|files/.*)$ {
                rewrite /rest/v1/(.*)$ /tms-software/rest/$1 last;
        }

        #rollouts
        location ~ ^/rest/v1/(rollouts|rollouts/.*)$ {
                rewrite /rest/v1/(.*)$ /tms-software/rest/$1 last;
        }
 # ics-job
                location ~ ^/rest/v1/(jobs/?|jobs/.*)$ {
                        rewrite /rest/v1/(.*)$ /ics-job/rest/$1 last;
                }

        #tms-api sites - every thing not ends with state, negative look behind
        location ~ ^/rest/v1/(sites/?|sites/.*)(?<!state)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

        #tms-api producttypes
        location = /rest/v1/producttypes {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }


        #tms-api targets and targets/{id}
        location ~ ^/rest/v1/(targets|targets/[^/]+)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

        #tms-api targets: configurationfiles
        location ~ ^/rest/v1/targets/[^/]+/(configurationfiles/?|configurationfiles/.+)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

       #files
        location ~ ^/rest/v1/(files|files/.*)$ {
                rewrite /rest/v1/(.*)$ /tms-software/rest/$1 last;
        }

        #software
        location ~ ^/rest/v1/(software|software/.*)$ {
                rewrite /rest/v1/(.*)$ /tms-software/rest/$1 last;
        }
        #rollouts
        location ~ ^/rest/v1/(rollouts|rollouts/.*)$ {
                rewrite /rest/v1/(.*)$ /tms-software/rest/$1 last;
        }



#tags
        location ~ ^/rest/v1/(tags|tags/.*)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

        #terminal-info
        location ~ ^/rest/v1/targets/[^/]+/(tallies/?|tallies/.+)$ {
                rewrite /rest/v1/(.*)$ /tms-terminal-info/rest/$1 last;
        }

        #redeem
        location ~ ^/rest/v1/(regcodes/.+$)$ {
                rewrite /rest/v1/(.*)$ /ics-device-auth/rest/$1 last;
        }
        #redeem for old seam API to new legacy impementation
        location ~ ^/tms/service/rest/regcodes/.+$ {
                rewrite /tms/service/rest/regcodes/(.+$) /ics-device-auth/rest/regcodes/$1 last;
        }

        #device auth
        location ~ ^/rest/v1/devices/(register|authenticate)$ {
                rewrite /rest/v1/(.*)$ /ics-device-auth/rest/$1 last;
        }
        location ~ ^/rest/v1/devices/[^/]+/recommission$ {
                rewrite /rest/v1/(.*)$ /ics-device-auth/rest/$1 last;
        }
                location ~ ^/rest/v1/(authenticatedevice|validatetoken)$ {
                        rewrite /rest/v1/(.*)$ /ics-device-auth/rest/$1 last;
                }

        #ics-data-upload
        location ~ ^/rest/v1/devices/[^/]+/data$ {
                rewrite /rest/v1/(.*)$ /ics-data-upload/rest/$1 last;
        }
#tags
        location ~ ^/rest/v1/(tags|tags/.*)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

        #terminal-info
        location ~ ^/rest/v1/targets/[^/]+/(tallies/?|tallies/.+)$ {
                rewrite /rest/v1/(.*)$ /tms-terminal-info/rest/$1 last;
        }

        #redeem
        location ~ ^/rest/v1/(regcodes/.+$)$ {
                rewrite /rest/v1/(.*)$ /ics-device-auth/rest/$1 last;
        }
        #redeem for old seam API to new legacy impementation
        location ~ ^/tms/service/rest/regcodes/.+$ {
                rewrite /tms/service/rest/regcodes/(.+$) /ics-device-auth/rest/regcodes/$1 last;
        }

        #device auth
        location ~ ^/rest/v1/devices/(register|authenticate)$ {
                rewrite /rest/v1/(.*)$ /ics-device-auth/rest/$1 last;
        }
        location ~ ^/rest/v1/devices/[^/]+/recommission$ {
                rewrite /rest/v1/(.*)$ /ics-device-auth/rest/$1 last;
        }
                location ~ ^/rest/v1/(authenticatedevice|validatetoken)$ {
                        rewrite /rest/v1/(.*)$ /ics-device-auth/rest/$1 last;
                }

        #ics-data-upload
        location ~ ^/rest/v1/devices/[^/]+/data$ {
                rewrite /rest/v1/(.*)$ /ics-data-upload/rest/$1 last;
        }




 #tms-api  (devices)
        location = /rest/v1/devices {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }


        #ics-alarm-rules and alarms/{id}
        location ~ ^/rest/v1/(alarms|alarms/[^/]+)$ {
                        rewrite /rest/v1/(.*)$ /ics-alarm-rules/rest/$1 last;
                }
                #ics-alarm-rules and users
                location ~ ^/rest/v1/(users|users/[^/]+)$ {
                        rewrite /rest/v1/(.*)$ /ics-alarm-rules/rest/$1 last;
                }


                #notifications
        location ~ ^/rest/v1/(notifications/.*)$ {
                rewrite /rest/v1/(.*)$ /ics-notification-service/rest/$1 last;
        }

                #state-service
        location ~ ^/rest/v1/devices/[0-9]+/state/?[^/]*$ {
                rewrite /rest/v1/(.*)$ /ics-state-service/rest/$1 last;
        }

        location ~ ^/rest/v1/devices/[0-9]+/events$ {
                rewrite /rest/v1/(.*)$ /ics-state-service/rest/$1 last;
        }

        location ~ ^/rest/v1/sites/[a-zA-Z0-9]+/(state|devices/state)$ {
                rewrite /rest/v1/(.*)$ /ics-state-service/rest/$1 last;
        }


        #fileuploadrequests 
        location ~ ^/rest/v1/fileuploadrequests {
                rewrite /rest/v1/(.*)$ /tms-terminal-info/rest/$1 last;
        }
        
        #files
        location ~ ^/rest/v1/(files|files/.*)$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }

        location ~ ^/rest/v1/devices/[0-9]+/uploadfile$ {
                rewrite /rest/v1/(.*)$ /tms-api/rest/$1 last;
        }   


  #legacy tms apis
        location ~ ^/rest/v1/targets/[^/]+/(config/?|config/.+|status/?|releases/?|releases/.+)$ {
                rewrite /rest/v1/(.*)$ /tms/service/rest/$1 last;
        }




#####################################################################################
        # redirect root url to /$host/tms-web
#        location = / {
#                return 301 $scheme://$host/tms-web;
#        }

        location = /ics-doc {
                #index index.html;
                try_files $uri $uri/index.html;
        }

}




		
				
		

server {

        listen 443 ssl;
		
        #server_name 172.25.120.1;
        
        
        access_log /var/log/nginx/access.log combined;
        error_log /var/log/nginx/error.log error;

        #by default, nginx root is /usr/share/nginx/html
        #root /usr/share/nginx/html
        error_page 502 =503 /503.html;

        ssl on;
        ssl_certificate         /etc/nginx/ssl/server-chain.crt;
        ssl_certificate_key     /etc/nginx/ssl/server.key;


        # Sessions are stored in the SSL session cache shared between worker processes and configured by the ssl_session_cache directive.
        # 1 megabyte of cache contains about 4000 sessions. The default cache timeout is 5 minutes.
        # This timeout can be increased using the ssl_session_timeout directive.
        # Below is a configuration optimized for a multi-core system with 10 megabyte shared session cache:

        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 10m;

        ssl_prefer_server_ciphers       on;
        ssl_protocols                   TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers                     ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DSS:!DES:!RC4:!3DES:!MD5:!PSK;
        ssl_ciphers                                             ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-RSA-RC4-SHA:AES128-GCM-SHA256:HIGH:!RC4:!MD5:!aNULL:!EDH:!CAMELLIA:!3DES;

        add_header Strict-Transport-Security "max-age=31536000";

        proxy_pass_request_headers      on;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header HTTP_AUTHORIZATION $http_authorization;



        location /auth {
                real_ip_header    X-Forwarded-For;
                proxy_set_header Host $host;
                proxy_pass http://keycloak_server;
                proxy_set_header X-Forwarded-For 172.25.120.59;
                proxy_set_header X-Forwarded-Proto https;
        }



        
        location /config {

                rewrite ^/config/(/?)(.*) /$2 break;

                proxy_set_header        Host invenco-nz-qa-tmsfiles-configuration-target.s3-ap-southeast-2.amazonaws.com;
                proxy_pass              https://invenco-nz-qa-tmsfiles-configuration-target.s3-ap-southeast-2.amazonaws.com;
        }

        location /softwarerelease {

                rewrite ^/softwarerelease/(/?)(.*) /$2 break;

                proxy_set_header        Host s3-ap-southeast-2.amazonaws.com;
                proxy_pass              https://s3-ap-southeast-2.amazonaws.com;

        }

        #static content
        location /content/ {
                root   /opt/memribox;
        }

}
                                                                                                                                                         
        
