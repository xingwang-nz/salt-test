{% set ssl_protocols = salt['pillar.get']('ssl:protocols') %}
{% set content_server_domain_name = salt['pillar.get']('ec2_server:content_server_domain_name') %}
{% set s3_bucket_name = salt['pillar.get']('tms:s3_bucket') %}
{% set s3_domain_name = 's3-ap-southeast-2.amazonaws.com' %}

upstream tomcat_server {
        server 192.168.1.66:8080 max_fails=1 fail_timeout=10s down;
        server 192.168.1.68:8080 max_fails=1 fail_timeout=10s down;
        server 172.25.115.151:8080 max_fails=1 fail_timeout=10s;
}

# redirect 80 to 443
server {
        listen  80;
        listen  [::]:80;
        return  301 https://$host$request_uri;
}

server {
        listen 443 ssl;

        #server_name localhost;
        access_log /var/log/nginx/access.log combined;
        error_log /var/log/nginx/error.log error;
        
        #by default, nginx root is /usr/share/nginx/html
        #root /usr/share/nginx/html
        error_page 502 =503 /503.html;

        ssl on;
        ssl_certificate         /etc/nginx/ssl/server-chain.crt;
        ssl_certificate_key     /etc/nginx/ssl/server.key;


        # Sessions are stored in the SSL session cache shared between worker processes and configured by the ssl_session_cache directive.
        # 1 megabyte of cache contains about 4000 sessions. The default cache timeout is 5 minutes.
        # This timeout can be increased using the ssl_session_timeout directive.
        # Below is a configuration optimized for a multi-core system with 10 megabyte shared session cache:

        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 10m;


        ssl_prefer_server_ciphers       on;
        
        ## {{ salt['pillar.get']('ssl:enable_sslv2hello') }}
        {% if salt['pillar.get']('ssl:enable_sslv2hello') == True %}
        ssl_protocols                   {{ ssl_protocols|join(" ") }} SSLv2Hello;
        {% else %}
        ssl_protocols                   {{ ssl_protocols|join(" ") }};
		{% endif %}	
		ssl_ciphers                     ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DSS:!DES:!RC4:!3DES:!MD5:!PSK;

        add_header Strict-Transport-Security "max-age=31536000";

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header        Authorization '';
        
        # redirect root url to /$host/sdemo
        location = / {
                return 301 https://$host/sdemo;
        }

        location /sdemo {
                proxy_pass http://tomcat_server;
                #proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }


        location /config {

                rewrite ^/config/(/?)(.*) /$2 break;

                proxy_set_header        Host {{ s3_bucket_name }}.{{ s3_domain_name }};
                proxy_pass              https://{{ s3_bucket_name }}.{{ s3_domain_name }};
        }

        location /softwarerelease {

                rewrite ^/softwarerelease/(/?)(.*) /$2 break;

                proxy_set_header        Host {{ s3_domain_name }};
                proxy_pass              https://{{ s3_domain_name }};

        }
        
        #static content
        location /content/ {
                root   /opt/memribox;
        }
        

}
