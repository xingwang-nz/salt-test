{% set logging_server_ip = salt['pillar.get']('logging_server:ip') %}
{% set redis_port = salt['pillar.get']('logging_server:redis_port') %}
{% set rsyslog_port = salt['pillar.get']('logging_server:rsyslog_port') %}
{% set elasticsearch_cluster_name = salt['pillar.get']('elasticsearch:cluster_name') %}
#input {
#     tcp {
#        port => 4560
#        codec => json
#    }
#}

input {
  redis {
       host => "{{ logging_server_ip }}"
       port => {{ redis_port }}
       type => "tms"
       data_type => "list"
       key => "logstash"
       format => "json_event"
  }
  syslog {
		type => syslog
		port => {{ rsyslog_port }}
  }
}

filter {
  grok {
   type => "auditd"
   pattern => [" AUDIT type=%{WORD:audit_type} msg=audit\(%{NUMBER:audit_epoch}:%{NUMBER:audit_coun
              ter}\): user pid=%{NUMBER:audit_pid} uid=%{NUMBER:audit_uid} auid=%{NUMBER:audit_audid} subj=%{WORD
              :audit_subject} msg=%{GREEDYDATA:audit_message}"]
   pattern => [" AUDITLOGIN type=%{WORD:audit_type} msg=audit\(%{NUMBER:audit_epoch}:%{NUMBER:audit
                _counter}\): login pid=%{NUMBER:audit_pid} uid=%{NUMBER:audit_uid} old auid=%{NUMBER:old_auid}
                new auid=%{NUMBER:new_auid} old ses=%{NUMBER:old_ses} new ses=%{NUMBER:new_ses}"]
  }
}


output {
   #elasticsearch { host => 127.0.0.1 }
   elasticsearch { cluster => "{{ elasticsearch_cluster_name }}" }
   stdout { codec => rubydebug }
}